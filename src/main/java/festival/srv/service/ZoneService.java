package festival.srv.service;

import festival.srv.entity.Zone;
import org.bson.Document;

import javax.enterprise.context.ApplicationScoped;
import javax.transaction.Transactional;
import java.util.List;
import java.util.stream.Collectors;

import static festival.srv.constant.DbCollections.ZONES_COLLECTION;
import static festival.srv.constant.DbKeys.*;

@ApplicationScoped
public class ZoneService extends Service<Zone> {


	/**
	 * Create a zone in the collection. The id is automatically generated by the database.
	 *
	 * @param zone The zone to create.
	 */
	@Transactional
	public void create(Zone zone){
		Document document = new Document()
				.append(NAME, zone.getName())
				.append(GAME_REFS, zone.getGameRefs())
				.append(SLOTS, zone.getSlots());

		super.create(document);
	}

	/**
	 * Get all zones from the collection.
	 *
	 * @return The list of zones.
	 */
	public List<Zone> read(){
		return getDocumentList().stream().map(Zone::new).collect(Collectors.toList());
	}

	/**
	 * Get a zone from the collection.
	 *
	 * @param id The id of the zone.
	 * @return The zone.
	 */
	public Zone read(String id){
		return new Zone(getDocument(id));
	}

	@Override
	protected String getCollectionName() {
		return ZONES_COLLECTION;
	}
}
